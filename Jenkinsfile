pipeline {
    agent any
    
    // 1. ENVIRONMENT VARIABLES
    environment {
        BACKEND_TEST_REPORT = 'bugtracker-backend/backend_test_results.xml'
        FRONTEND_TEST_REPORT = 'bugtracker-frontend/test-results.xml'
        FRONTEND_COVERAGE_REPORT = 'bugtracker-frontend/coverage/lcov.info'
    }

    stages { 
        stage ("unit tests-backend") {
            steps {
                dir('bugtracker-backend') {
                    echo "Running go mod tidy..."
                    sh 'go mod tidy'
                    
                    echo "Running go test and generating JUnit XML report..."
                    // CRITICAL FIX: Use gotestsum to run tests and output the XML report
                    // The --junitfile flag tells gotestsum where to put the XML file.
                    sh 'gotestsum --junitfile ${BACKEND_TEST_REPORT} -- -v ./...'
                }
            }
            // The POST block now correctly points to the file generated by gotestsum
            post {
                always {
                    junit testResults: env.BACKEND_TEST_REPORT, skipOldReports: true
                }
            }
        }

        stage ("unit test for frontend") {
            steps {
                dir('bugtracker-frontend') {
                    sh 'npm install'
                    sh 'npm test -- --coverage --watchAll=false --reporters=default --reporters=jest-junit' 
                }
            }
            post {
                always {
                    junit testResults: env.FRONTEND_TEST_REPORT, skipOldReports: true
                }
                success {
                    // Corrected syntax for coverage plugin:
                    recordCoverage tools: [lcov(pattern: env.FRONTEND_COVERAGE_REPORT)]
                }
            }
        }
        
         } 
    }
